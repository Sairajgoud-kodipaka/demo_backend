# Generated by Django 4.2.7 on 2025-07-25 07:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0002_tenant_google_maps_url'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('report_type', models.CharField(choices=[('sales_report', 'Sales Report'), ('customer_report', 'Customer Report'), ('product_report', 'Product Report'), ('financial_report', 'Financial Report'), ('custom', 'Custom Report')], max_length=20)),
                ('format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('json', 'JSON')], default='pdf', max_length=10)),
                ('parameters', models.JSONField(blank=True, default=dict)),
                ('filters', models.JSONField(blank=True, default=dict)),
                ('file_path', models.CharField(blank=True, max_length=500, null=True)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('is_generated', models.BooleanField(default=False)),
                ('generation_started', models.DateTimeField(blank=True, null=True)),
                ('generation_completed', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='tenants.tenant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report',
                'verbose_name_plural': 'Reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('widget_type', models.CharField(choices=[('chart', 'Chart'), ('metric', 'Metric'), ('table', 'Table'), ('list', 'List')], max_length=20)),
                ('chart_type', models.CharField(blank=True, choices=[('line', 'Line Chart'), ('bar', 'Bar Chart'), ('pie', 'Pie Chart'), ('donut', 'Donut Chart'), ('area', 'Area Chart')], max_length=20, null=True)),
                ('config', models.JSONField(blank=True, default=dict)),
                ('position', models.JSONField(blank=True, default=dict)),
                ('is_visible', models.BooleanField(default=True)),
                ('data_source', models.CharField(blank=True, max_length=100, null=True)),
                ('refresh_interval', models.PositiveIntegerField(default=300, help_text='Refresh interval in seconds')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_widgets', to='tenants.tenant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_widgets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dashboard Widget',
                'verbose_name_plural': 'Dashboard Widgets',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('page_view', 'Page View'), ('click', 'Click'), ('form_submit', 'Form Submit'), ('purchase', 'Purchase'), ('signup', 'Sign Up'), ('login', 'Login'), ('custom', 'Custom Event')], max_length=20)),
                ('event_name', models.CharField(max_length=100)),
                ('event_data', models.JSONField(blank=True, default=dict)),
                ('session_id', models.CharField(blank=True, max_length=100, null=True)),
                ('page_url', models.URLField(blank=True, null=True)),
                ('page_title', models.CharField(blank=True, max_length=200, null=True)),
                ('referrer_url', models.URLField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics_events', to='tenants.tenant')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analytics_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Analytics Event',
                'verbose_name_plural': 'Analytics Events',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BusinessMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('sales', 'Sales'), ('revenue', 'Revenue'), ('customers', 'Customers'), ('products', 'Products'), ('conversion', 'Conversion Rate'), ('retention', 'Customer Retention')], max_length=20)),
                ('metric_name', models.CharField(max_length=100)),
                ('value', models.DecimalField(decimal_places=2, max_digits=15)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('period_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=20)),
                ('previous_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('change_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_metrics', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Business Metric',
                'verbose_name_plural': 'Business Metrics',
                'ordering': ['-period_end'],
                'unique_together': {('metric_type', 'metric_name', 'period_start', 'period_end', 'tenant')},
            },
        ),
    ]
