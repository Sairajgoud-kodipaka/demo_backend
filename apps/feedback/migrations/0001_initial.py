# Generated by Django 5.2.4 on 2025-07-25 21:20

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clients', '0012_alter_appointment_options_appointment_assigned_to_and_more'),
        ('tenants', '0002_tenant_google_maps_url'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Brief title for the feedback', max_length=200)),
                ('content', models.TextField(help_text='Detailed feedback content')),
                ('category', models.CharField(choices=[('product_quality', 'Product Quality'), ('service_experience', 'Service Experience'), ('staff_behavior', 'Staff Behavior'), ('store_ambience', 'Store Ambience'), ('pricing', 'Pricing'), ('delivery', 'Delivery'), ('website_experience', 'Website Experience'), ('customer_support', 'Customer Support'), ('general', 'General')], default='general', help_text='Category of the feedback', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('reviewed', 'Reviewed'), ('actioned', 'Action Taken'), ('closed', 'Closed'), ('escalated', 'Escalated')], default='pending', help_text='Current status of the feedback', max_length=20)),
                ('overall_rating', models.IntegerField(help_text='Overall rating (1-5 stars)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('product_rating', models.IntegerField(blank=True, help_text='Product rating (1-5 stars)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('service_rating', models.IntegerField(blank=True, help_text='Service rating (1-5 stars)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('value_rating', models.IntegerField(blank=True, help_text='Value for money rating (1-5 stars)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('sentiment', models.CharField(blank=True, choices=[('very_positive', 'Very Positive'), ('positive', 'Positive'), ('neutral', 'Neutral'), ('negative', 'Negative'), ('very_negative', 'Very Negative')], help_text='Automated sentiment analysis', max_length=20, null=True)),
                ('sentiment_score', models.FloatField(blank=True, help_text='Sentiment score (-1 to 1)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('actioned_at', models.DateTimeField(blank=True, null=True)),
                ('is_anonymous', models.BooleanField(default=False, help_text='Whether the feedback was submitted anonymously')),
                ('is_public', models.BooleanField(default=False, help_text='Whether this feedback can be displayed publicly')),
                ('tags', models.JSONField(blank=True, default=list, help_text='Tags for categorizing feedback')),
                ('client', models.ForeignKey(help_text='Client who provided the feedback', on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='clients.client')),
                ('reviewed_by', models.ForeignKey(blank=True, help_text='User who reviewed the feedback', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_feedbacks', to=settings.AUTH_USER_MODEL)),
                ('submitted_by', models.ForeignKey(blank=True, help_text='User who submitted the feedback (if different from client)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submitted_feedbacks', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(help_text='Tenant this feedback belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedbacks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FeedbackResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(help_text='Response content')),
                ('is_public', models.BooleanField(default=False, help_text='Whether this response is visible to the customer')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(help_text='User who wrote the response', on_delete=django.db.models.deletion.CASCADE, related_name='feedback_responses', to=settings.AUTH_USER_MODEL)),
                ('feedback', models.ForeignKey(help_text='Feedback this response is for', on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='feedback.feedback')),
            ],
            options={
                'verbose_name': 'Feedback Response',
                'verbose_name_plural': 'Feedback Responses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FeedbackSurvey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Survey name', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Survey description')),
                ('survey_type', models.CharField(choices=[('post_purchase', 'Post Purchase'), ('service_evaluation', 'Service Evaluation'), ('satisfaction', 'General Satisfaction'), ('custom', 'Custom Survey')], default='satisfaction', help_text='Type of survey', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_surveys', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Feedback Survey',
                'verbose_name_plural': 'Feedback Surveys',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FeedbackSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answers', models.JSONField(help_text='Survey answers')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('client', models.ForeignKey(help_text='Client who submitted the survey', on_delete=django.db.models.deletion.CASCADE, related_name='survey_submissions', to='clients.client')),
                ('survey', models.ForeignKey(help_text='Survey this submission is for', on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='feedback.feedbacksurvey')),
            ],
            options={
                'verbose_name': 'Feedback Submission',
                'verbose_name_plural': 'Feedback Submissions',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='FeedbackQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(help_text='Question text', max_length=500)),
                ('question_type', models.CharField(choices=[('rating', 'Rating (1-5)'), ('text', 'Text Response'), ('multiple_choice', 'Multiple Choice'), ('yes_no', 'Yes/No')], default='rating', help_text='Type of question', max_length=20)),
                ('is_required', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Question order')),
                ('options', models.JSONField(blank=True, default=list, help_text='Options for multiple choice questions')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('survey', models.ForeignKey(help_text='Survey this question belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='feedback.feedbacksurvey')),
            ],
            options={
                'verbose_name': 'Feedback Question',
                'verbose_name_plural': 'Feedback Questions',
                'ordering': ['survey', 'order'],
            },
        ),
    ]
