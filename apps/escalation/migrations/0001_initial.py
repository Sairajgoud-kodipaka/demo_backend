# Generated by Django 5.2.4 on 2025-07-25 21:18

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clients', '0012_alter_appointment_options_appointment_assigned_to_and_more'),
        ('tenants', '0002_tenant_google_maps_url'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Escalation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Brief description of the issue', max_length=200)),
                ('description', models.TextField(help_text='Detailed description of the issue')),
                ('category', models.CharField(choices=[('product_issue', 'Product Issue'), ('service_quality', 'Service Quality'), ('billing', 'Billing'), ('delivery', 'Delivery'), ('technical', 'Technical'), ('complaint', 'Complaint'), ('refund', 'Refund'), ('other', 'Other')], default='other', help_text='Category of the escalation', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', help_text='Priority level of the escalation', max_length=10)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('pending_customer', 'Pending Customer Response'), ('resolved', 'Resolved'), ('closed', 'Closed'), ('cancelled', 'Cancelled')], default='open', help_text='Current status of the escalation', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('sla_hours', models.PositiveIntegerField(default=24, help_text='SLA hours for resolution')),
                ('due_date', models.DateTimeField(blank=True, help_text='Due date based on SLA', null=True)),
                ('assigned_to', models.ForeignKey(blank=True, help_text='Manager assigned to handle the escalation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_escalations', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(help_text='Client who raised the issue', on_delete=django.db.models.deletion.CASCADE, related_name='escalations', to='clients.client')),
                ('created_by', models.ForeignKey(help_text='User who created the escalation', on_delete=django.db.models.deletion.CASCADE, related_name='created_escalations', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(help_text='Tenant this escalation belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='escalations', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Escalation',
                'verbose_name_plural': 'Escalations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EscalationNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(help_text='Note content')),
                ('is_internal', models.BooleanField(default=False, help_text='Whether this note is internal (not visible to customer)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(help_text='User who wrote the note', on_delete=django.db.models.deletion.CASCADE, related_name='escalation_notes', to=settings.AUTH_USER_MODEL)),
                ('escalation', models.ForeignKey(help_text='Escalation this note belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='escalation.escalation')),
            ],
            options={
                'verbose_name': 'Escalation Note',
                'verbose_name_plural': 'Escalation Notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EscalationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Template name', max_length=100)),
                ('category', models.CharField(choices=[('product_issue', 'Product Issue'), ('service_quality', 'Service Quality'), ('billing', 'Billing'), ('delivery', 'Delivery'), ('technical', 'Technical'), ('complaint', 'Complaint'), ('refund', 'Refund'), ('other', 'Other')], help_text='Category this template applies to', max_length=20)),
                ('subject', models.CharField(help_text='Email subject line', max_length=200)),
                ('content', models.TextField(help_text='Template content')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='escalation_templates', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Escalation Template',
                'verbose_name_plural': 'Escalation Templates',
                'ordering': ['name'],
            },
        ),
    ]
