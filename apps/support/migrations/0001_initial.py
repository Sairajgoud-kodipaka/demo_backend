# Generated by Django 5.2.4 on 2025-07-28 09:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0002_tenant_google_maps_url'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SupportSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auto_assign_tickets', models.BooleanField(default=True, help_text='Automatically assign tickets to available platform admins')),
                ('max_response_time_hours', models.PositiveIntegerField(default=24, help_text='Maximum response time in hours for non-critical tickets')),
                ('critical_response_time_hours', models.PositiveIntegerField(default=4, help_text='Maximum response time in hours for critical tickets')),
                ('email_notifications', models.BooleanField(default=True)),
                ('in_app_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('business_hours_start', models.TimeField(default='09:00')),
                ('business_hours_end', models.TimeField(default='18:00')),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('auto_close_after_days', models.PositiveIntegerField(default=7, help_text='Automatically close resolved tickets after this many days')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='support_settings', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Support Settings',
                'verbose_name_plural': 'Support Settings',
            },
        ),
        migrations.CreateModel(
            name='SupportTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_id', models.CharField(help_text='Unique ticket identifier', max_length=20, unique=True)),
                ('title', models.CharField(help_text='Brief description of the issue', max_length=200)),
                ('summary', models.TextField(help_text='Detailed description of the issue')),
                ('category', models.CharField(choices=[('technical', 'Technical Issue'), ('billing', 'Billing & Subscription'), ('feature_request', 'Feature Request'), ('bug_report', 'Bug Report'), ('general', 'General Inquiry'), ('integration', 'Integration Issue')], default='general', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed'), ('reopened', 'Reopened')], default='open', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('is_urgent', models.BooleanField(default=False, help_text='Mark as urgent for quick response')),
                ('requires_callback', models.BooleanField(default=False, help_text='Business admin requested a callback')),
                ('callback_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('callback_preferred_time', models.CharField(blank=True, max_length=100, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, help_text='Platform admin assigned to resolve the ticket', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tickets', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(help_text='Business admin who created the ticket', on_delete=django.db.models.deletion.CASCADE, related_name='created_tickets', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(help_text='Tenant associated with this ticket', on_delete=django.db.models.deletion.CASCADE, related_name='support_tickets', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Support Ticket',
                'verbose_name_plural': 'Support Tickets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SupportNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('ticket_created', 'Ticket Created'), ('ticket_updated', 'Ticket Updated'), ('message_received', 'Message Received'), ('ticket_resolved', 'Ticket Resolved'), ('ticket_closed', 'Ticket Closed'), ('ticket_reopened', 'Ticket Reopened'), ('callback_requested', 'Callback Requested')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(help_text='User who will receive this notification', on_delete=django.db.models.deletion.CASCADE, related_name='support_notifications', to=settings.AUTH_USER_MODEL)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='support.supportticket')),
            ],
            options={
                'verbose_name': 'Support Notification',
                'verbose_name_plural': 'Support Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TicketMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(help_text='Message content')),
                ('is_internal', models.BooleanField(default=False, help_text='Internal note visible only to platform admins')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_system_message', models.BooleanField(default=False, help_text='System-generated message (status changes, etc.)')),
                ('message_type', models.CharField(choices=[('text', 'Text'), ('status_update', 'Status Update'), ('resolution', 'Resolution'), ('reopening', 'Reopening')], default='text', max_length=20)),
                ('sender', models.ForeignKey(help_text='User who sent this message', on_delete=django.db.models.deletion.CASCADE, related_name='sent_support_messages', to=settings.AUTH_USER_MODEL)),
                ('ticket', models.ForeignKey(help_text='Support ticket this message belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='support.supportticket')),
            ],
            options={
                'verbose_name': 'Ticket Message',
                'verbose_name_plural': 'Ticket Messages',
                'ordering': ['created_at'],
            },
        ),
    ]
