# Generated by Django 4.2.7 on 2025-07-25 07:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0002_tenant_google_maps_url'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ScheduledTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('task_type', models.CharField(choices=[('email', 'Email'), ('notification', 'Notification'), ('report', 'Report'), ('data_sync', 'Data Sync'), ('cleanup', 'Cleanup'), ('custom', 'Custom Task')], max_length=20)),
                ('frequency', models.CharField(choices=[('minutely', 'Every Minute'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly'), ('custom', 'Custom')], max_length=20)),
                ('schedule_config', models.JSONField(blank=True, default=dict)),
                ('task_config', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('paused', 'Paused')], default='active', max_length=20)),
                ('is_enabled', models.BooleanField(default=True)),
                ('last_executed', models.DateTimeField(blank=True, null=True)),
                ('next_execution', models.DateTimeField(blank=True, null=True)),
                ('execution_count', models.PositiveIntegerField(default=0)),
                ('success_count', models.PositiveIntegerField(default=0)),
                ('failure_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
                ('retry_delay_minutes', models.PositiveIntegerField(default=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_tasks', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Scheduled Task',
                'verbose_name_plural': 'Scheduled Tasks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('progress', models.PositiveIntegerField(default=0)),
                ('input_data', models.JSONField(blank=True, default=dict)),
                ('output_data', models.JSONField(blank=True, default=dict)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('is_retry', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='automation.scheduledtask')),
            ],
            options={
                'verbose_name': 'Task Execution',
                'verbose_name_plural': 'Task Executions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AutomationWorkflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('trigger_type', models.CharField(choices=[('event', 'Event'), ('schedule', 'Schedule'), ('manual', 'Manual'), ('condition', 'Condition')], max_length=20)),
                ('trigger_config', models.JSONField(blank=True, default=dict)),
                ('conditions', models.JSONField(blank=True, default=list)),
                ('actions', models.JSONField(blank=True, default=list)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('draft', 'Draft')], default='draft', max_length=20)),
                ('is_enabled', models.BooleanField(default=False)),
                ('max_executions', models.PositiveIntegerField(default=0, help_text='0 for unlimited')),
                ('execution_count', models.PositiveIntegerField(default=0)),
                ('last_executed', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='automation_workflows', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Automation Workflow',
                'verbose_name_plural': 'Automation Workflows',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AutomationExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('progress', models.PositiveIntegerField(default=0, help_text='Progress percentage')),
                ('input_data', models.JSONField(blank=True, default=dict)),
                ('output_data', models.JSONField(blank=True, default=dict)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('trigger_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('triggered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='triggered_automations', to=settings.AUTH_USER_MODEL)),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='automation.automationworkflow')),
            ],
            options={
                'verbose_name': 'Automation Execution',
                'verbose_name_plural': 'Automation Executions',
                'ordering': ['-created_at'],
            },
        ),
    ]
