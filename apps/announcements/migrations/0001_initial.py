# Generated by Django 5.2.4 on 2025-07-25 21:47

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('stores', '0002_store_tenant'),
        ('tenants', '0002_tenant_google_maps_url'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Announcement title', max_length=200)),
                ('content', models.TextField(help_text='Announcement content')),
                ('announcement_type', models.CharField(choices=[('system_wide', 'System-wide'), ('team_specific', 'Team-specific'), ('store_specific', 'Store-specific'), ('role_specific', 'Role-specific')], default='system_wide', help_text='Type of announcement', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', help_text='Priority level of the announcement', max_length=10)),
                ('target_roles', models.JSONField(blank=True, default=list, help_text='List of user roles to target (e.g., ["manager", "inhouse_sales"])')),
                ('is_pinned', models.BooleanField(default=False, help_text='Whether this announcement is pinned to the top')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this announcement is currently active')),
                ('requires_acknowledgment', models.BooleanField(default=False, help_text='Whether users must acknowledge this announcement')),
                ('publish_at', models.DateTimeField(default=django.utils.timezone.now, help_text='When to publish this announcement')),
                ('expires_at', models.DateTimeField(blank=True, help_text='When this announcement expires (null for no expiration)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(help_text='User who created this announcement', on_delete=django.db.models.deletion.CASCADE, related_name='created_announcements', to=settings.AUTH_USER_MODEL)),
                ('target_stores', models.ManyToManyField(blank=True, help_text='Stores to target (leave empty for all stores)', related_name='announcements', to='stores.store')),
                ('target_tenants', models.ManyToManyField(blank=True, help_text='Tenants to target (leave empty for all tenants)', related_name='targeted_announcements', to='tenants.tenant')),
                ('tenant', models.ForeignKey(help_text='Tenant this announcement belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='system_announcements', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Announcement',
                'verbose_name_plural': 'Announcements',
                'ordering': ['-is_pinned', '-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TeamMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(help_text='Message subject', max_length=200)),
                ('content', models.TextField(help_text='Message content')),
                ('message_type', models.CharField(choices=[('general', 'General'), ('task', 'Task-related'), ('customer', 'Customer-related'), ('urgent', 'Urgent')], default='general', help_text='Type of message', max_length=20)),
                ('is_urgent', models.BooleanField(default=False, help_text='Whether this is an urgent message')),
                ('requires_response', models.BooleanField(default=False, help_text='Whether this message requires a response')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_message', models.ForeignKey(blank=True, help_text='Parent message for threading', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='announcements.teammessage')),
                ('recipients', models.ManyToManyField(help_text='Users who should receive this message', related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(help_text='User who sent the message', on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
                ('store', models.ForeignKey(help_text='Store this message belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='team_messages', to='stores.store')),
                ('tenant', models.ForeignKey(help_text='Tenant this message belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='team_messages', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Team Message',
                'verbose_name_plural': 'Team Messages',
                'ordering': ['-is_urgent', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnnouncementRead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_at', models.DateTimeField(auto_now_add=True)),
                ('acknowledged', models.BooleanField(default=False, help_text='Whether the user acknowledged the announcement')),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('announcement', models.ForeignKey(help_text='Announcement that was read', on_delete=django.db.models.deletion.CASCADE, related_name='reads', to='announcements.announcement')),
                ('user', models.ForeignKey(help_text='User who read the announcement', on_delete=django.db.models.deletion.CASCADE, related_name='announcement_reads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Announcement Read',
                'verbose_name_plural': 'Announcement Reads',
                'ordering': ['-read_at'],
                'unique_together': {('announcement', 'user')},
            },
        ),
        migrations.CreateModel(
            name='MessageRead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_at', models.DateTimeField(auto_now_add=True)),
                ('responded', models.BooleanField(default=False, help_text='Whether the user responded to the message')),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(help_text='User who read the message', on_delete=django.db.models.deletion.CASCADE, related_name='message_reads', to=settings.AUTH_USER_MODEL)),
                ('message', models.ForeignKey(help_text='Message that was read', on_delete=django.db.models.deletion.CASCADE, related_name='reads', to='announcements.teammessage')),
            ],
            options={
                'verbose_name': 'Message Read',
                'verbose_name_plural': 'Message Reads',
                'ordering': ['-read_at'],
                'unique_together': {('message', 'user')},
            },
        ),
    ]
