# Generated by Django 5.2.4 on 2025-07-28 04:02

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('stores', '0002_store_tenant'),
        ('tenants', '0002_tenant_google_maps_url'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerSegment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Segment name', max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('criteria', models.JSONField(default=dict, help_text='Segment criteria (age, location, purchase history, etc.)')),
                ('customer_count', models.PositiveIntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('average_order_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('conversion_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Conversion rate percentage', max_digits=5)),
                ('engagement_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Engagement rate percentage', max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_segments', to=settings.AUTH_USER_MODEL)),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_segments', to='stores.store')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_segments', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Customer Segment',
                'verbose_name_plural': 'Customer Segments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EcommercePlatform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Platform name', max_length=100)),
                ('platform_type', models.CharField(choices=[('dukaan', 'Dukaan'), ('quicksell', 'QuickSell'), ('shopify', 'Shopify'), ('woocommerce', 'WooCommerce'), ('custom', 'Custom')], max_length=20)),
                ('status', models.CharField(choices=[('connected', 'Connected'), ('disconnected', 'Disconnected'), ('error', 'Error')], default='disconnected', max_length=20)),
                ('api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('api_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('webhook_url', models.URLField(blank=True, null=True)),
                ('store_url', models.URLField(blank=True, null=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_frequency', models.PositiveIntegerField(default=3600, help_text='Sync frequency in seconds')),
                ('total_products', models.PositiveIntegerField(default=0)),
                ('total_orders', models.PositiveIntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ecommerce_platforms', to='stores.store')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ecommerce_platforms', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'E-commerce Platform',
                'verbose_name_plural': 'E-commerce Platforms',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MarketingCampaign',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Campaign name', max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('campaign_type', models.CharField(choices=[('whatsapp', 'WhatsApp'), ('email', 'Email'), ('sms', 'SMS'), ('social_media', 'Social Media'), ('ecommerce', 'E-commerce')], max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('target_audience', models.JSONField(default=list, help_text='List of customer segments to target')),
                ('estimated_reach', models.PositiveIntegerField(default=0, help_text='Estimated number of recipients')),
                ('custom_message', models.TextField(blank=True, null=True)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('messages_sent', models.PositiveIntegerField(default=0)),
                ('messages_delivered', models.PositiveIntegerField(default=0)),
                ('messages_read', models.PositiveIntegerField(default=0)),
                ('replies_received', models.PositiveIntegerField(default=0)),
                ('conversions', models.PositiveIntegerField(default=0)),
                ('revenue_generated', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_campaigns', to=settings.AUTH_USER_MODEL)),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='marketing_campaigns', to='stores.store')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marketing_campaigns', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Marketing Campaign',
                'verbose_name_plural': 'Marketing Campaigns',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MessageTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Template name', max_length=200)),
                ('template_type', models.CharField(choices=[('whatsapp', 'WhatsApp'), ('email', 'Email'), ('sms', 'SMS'), ('social_media', 'Social Media')], max_length=20)),
                ('category', models.CharField(choices=[('promotional', 'Promotional'), ('transactional', 'Transactional'), ('informational', 'Informational'), ('greeting', 'Greeting'), ('follow_up', 'Follow-up')], max_length=20)),
                ('subject', models.CharField(blank=True, help_text='Email subject line', max_length=200, null=True)),
                ('message_content', models.TextField(help_text='Message content with variables like {{customer_name}}')),
                ('variables', models.JSONField(default=list, help_text='List of available variables for this template')),
                ('is_approved', models.BooleanField(default=False, help_text='Whether template is approved by WhatsApp')),
                ('approval_status', models.CharField(default='pending', help_text='WhatsApp approval status', max_length=20)),
                ('usage_count', models.PositiveIntegerField(default=0, help_text='Number of times this template has been used')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_templates', to=settings.AUTH_USER_MODEL)),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='message_templates', to='stores.store')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_templates', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Message Template',
                'verbose_name_plural': 'Message Templates',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MarketingEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('campaign_launched', 'Campaign Launched'), ('campaign_completed', 'Campaign Completed'), ('template_created', 'Template Created'), ('template_approved', 'Template Approved'), ('platform_connected', 'Platform Connected'), ('segment_created', 'Segment Created'), ('high_conversion', 'High Conversion'), ('low_performance', 'Low Performance')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('event_data', models.JSONField(default=dict, help_text='Additional event data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='marketing.marketingcampaign')),
                ('platform', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='marketing.ecommerceplatform')),
                ('segment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='marketing.customersegment')),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='marketing_events', to='stores.store')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marketing_events', to='tenants.tenant')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='marketing.messagetemplate')),
            ],
            options={
                'verbose_name': 'Marketing Event',
                'verbose_name_plural': 'Marketing Events',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='marketingcampaign',
            name='message_template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='marketing.messagetemplate'),
        ),
        migrations.CreateModel(
            name='MarketingAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('impressions', models.PositiveIntegerField(default=0)),
                ('clicks', models.PositiveIntegerField(default=0)),
                ('conversions', models.PositiveIntegerField(default=0)),
                ('revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('age_groups', models.JSONField(default=dict, help_text='Age group distribution')),
                ('gender_distribution', models.JSONField(default=dict, help_text='Gender distribution')),
                ('device_types', models.JSONField(default=dict, help_text='Device type distribution')),
                ('locations', models.JSONField(default=dict, help_text='Geographic distribution')),
                ('date', models.DateField()),
                ('hour', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='marketing.marketingcampaign')),
            ],
            options={
                'verbose_name': 'Marketing Analytics',
                'verbose_name_plural': 'Marketing Analytics',
                'ordering': ['-date', '-hour'],
                'unique_together': {('campaign', 'date', 'hour')},
            },
        ),
    ]
